{"version":3,"file":"static/js/475.b8af3e7e.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Users/Users.module.css?b9d0","webpack://my-app/./src/components/common/preloader/Paginator/Paginator.module.css?f4e4","components/common/preloader/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/users-selectors.js","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Users_content__dMxFu\",\"userPhoto\":\"Users_userPhoto__tOpRe\",\"users\":\"Users_users__dMhkM\",\"userInfo\":\"Users_userInfo__S6w3D\",\"selectedPage\":\"Users_selectedPage__6UDQp\",\"nonSelectedPage\":\"Users_nonSelectedPage__8h2mT\",\"checkbox\":\"Users_checkbox__Oxois\"};","// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__zcpVo\",\"pagination\":\"Paginator_pagination__38YiD\"};","import React, { useState, useEffect } from 'react';\r\nimport classes from './Paginator.module.css'\r\nimport prev from \"../../../../assets/images/prev.png\";\r\n\r\ninterface PaginatorProps {\r\n    totalItemsCount: number;\r\n    pageSize: number;\r\n    currentPage: number;\r\n    onPageChanged(pageNumber: number): void;\r\n    portionSize: number;\r\n}\r\n\r\nlet Paginator = (props: PaginatorProps) => {\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n    let portionSize = props.portionSize;\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = pagesCount / portionSize;\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftBorder = portionNumber * portionSize - portionSize + 1;\r\n    let rightBorder = portionNumber * portionSize;\r\n\r\n\r\n  \r\n\r\n    return <div className={classes.paginator}>\r\n\r\n            {portionNumber > 1 &&\r\n                <span>\r\n                    <button className={classes.pagination} onClick={() => { setPortionNumber(1) }}>{`<<`}</button>\r\n                    <button className={classes.pagination} onClick={() => { setPortionNumber(portionNumber - 1) }}>{`<`}</button>\r\n                </span>\r\n            }\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftBorder && p <= rightBorder)\r\n                    .map(p => {\r\n                        return <span className={props.currentPage === p ? classes.selectedPage : classes.pagination}\r\n                            onClick={() => props.onPageChanged(p)}>{p}</span>\r\n                    })\r\n            }\r\n            {portionNumber < portionCount &&\r\n                <span>\r\n                    <button className={classes.pagination} onClick={() => { setPortionNumber(portionNumber + 1) }}>{`>`}</button>\r\n                    <button className={classes.pagination} onClick={() => { setPortionNumber(portionCount) }}>{`>>`}</button>\r\n                </span>\r\n            }\r\n    </div>\r\n}\r\n\r\nexport default Paginator; ","import React from 'react';\r\nimport classes from './Users.module.css'\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Paginator from '../common/preloader/Paginator/Paginator';\r\n\r\ninterface UserProps {\r\n    user: {\r\n        id: number;\r\n        photos: {\r\n            small: string;\r\n            large: string;\r\n        };\r\n        followed: boolean;\r\n        name: string;\r\n        status: string;\r\n        /*location: {\r\n            city: string;\r\n            country: string;\r\n        }*/\r\n    };\r\n    follow(userId: number): void;\r\n    unfollow(userId: number): void;\r\n    followingInProgress: Array<number>;\r\n}\r\n\r\nlet User = (props: UserProps) => {\r\n    let user = props.user\r\n    return <div>\r\n        <div className={classes.users}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/Profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={classes.userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed ?\r\n                        <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            props.unfollow(user.id)\r\n                        }}>Unfollow</button>\r\n                        :\r\n                        <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            props.follow(user.id)\r\n                        }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span className={classes.userInfo}>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"u.location.city\"}</div>\r\n                    <div>{\"u.location.country\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default User; ","import React, { useState, useEffect } from 'react';\r\nimport classes from './Users.module.css'\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Paginator from '../common/preloader/Paginator/Paginator';\r\nimport User from './User';\r\n\r\ninterface UsersProps {\r\n    users: Array<{\r\n        id: number;\r\n        photos: {\r\n            small: string;\r\n            large: string;\r\n        };\r\n        followed: boolean;\r\n        name: string;\r\n        status: string;\r\n        /*location: {\r\n            city: string;\r\n            country: string;\r\n        }*/\r\n    }>;\r\n    totalUsersCount: number;\r\n    pageSize: number;\r\n    portionSize: number;\r\n    currentPage: number;\r\n    follow(userId: number): void;\r\n    unfollow(userId: number): void;\r\n    onPageChanged(pageNumber: number): void;\r\n    toggleFollowingInProgress(isFollowingInProgress: boolean, userId: number): void;\r\n    followingInProgress: Array<number>;\r\n    getUsers(currentPage: number, pageSize: number, friend: boolean | null): void;\r\n    friend: boolean;\r\n\r\n\r\n}\r\n\r\nlet Users = (props: UsersProps) => {\r\n    const [checkbox, setCheckbox] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        if (checkbox) {\r\n            props.getUsers(props.currentPage, props.pageSize, null)\r\n        }\r\n        else {\r\n            props.getUsers(props.currentPage, props.pageSize, true)\r\n        }\r\n    }, [checkbox]);\r\n    return <div>\r\n        <Paginator totalItemsCount={props.totalUsersCount} pageSize={props.pageSize}\r\n            currentPage={props.currentPage} onPageChanged={props.onPageChanged} portionSize={props.portionSize} />\r\n        <div>\r\n            <div className={classes.checkbox}>\r\n                <input type=\"checkbox\" checked={checkbox}\r\n                    onChange={e => setCheckbox(e.target.checked)}\r\n                    name='findAllUsers'\r\n                />\r\n                <label htmlFor=\"findAllUsers\">Показать всех пользователей</label>\r\n            </div>\r\n            {\r\n                props.users\r\n                    .map(u => <User\r\n                        key={u.id}\r\n                        user={u}\r\n                        followingInProgress={props.followingInProgress}\r\n                        follow={props.follow}\r\n                        unfollow={props.unfollow}\r\n                    />\r\n                    )\r\n            }\r\n        </div>\r\n\r\n    </div >\r\n}\r\n\r\nexport default Users; ","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {createSelector} from \"reselect\"\r\n\r\nexport const getUsersDataSelector = (state) => {\r\n    return state.usersData.users;\r\n}\r\n\r\nexport const getUsersData = createSelector(getUsersDataSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersData.pageSize;\r\n}\r\n\r\nexport const getIsFriend = (state) => {\r\n    return state.usersData.friend;\r\n}\r\n\r\nexport const getPortionSize = (state) => {\r\n    return state.usersData.portionSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersData.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersData.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersData.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersData.followingInProgress;\r\n}","import React from 'react';\r\nimport { BrowserRouter, NavLink, Route, Routes } from 'react-router-dom';\r\nimport { StateFromReducersMapObject } from 'redux';\r\nimport { follow, setIsFriend, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching, toggleFollowingInProgress, getUsers } from '../../redux/users-reducer';\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport axios from 'axios';\r\nimport Preloader from '../common/preloader/preloader';\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport classes from './Users.module.css'\r\n\r\nimport {getUsersData, getIsFriend, getPageSize, getTotalUsersCount, getPortionSize, getCurrentPage, getIsFetching, getFollowingInProgress} from '../../redux/users-selectors'\r\n\r\n\r\ninterface UsersApiCProps {\r\n    users: Array<{\r\n        id: number;\r\n        photos: {\r\n            small: string;\r\n            large: string;\r\n        };\r\n        followed: boolean;\r\n        name: string;\r\n        status: string;\r\n        /*location: {\r\n            city: string;\r\n            country: string;\r\n        }*/\r\n    }>;\r\n    totalUsersCount: number;\r\n    pageSize: number;\r\n    friend: boolean;\r\n    portionSize: number;\r\n    currentPage: number;\r\n    follow(userId: number): void;\r\n    unfollow(userId: number): void;\r\n    setUsers(users: any): void;\r\n    setCurrentPage(currentPage: number): void;\r\n    setTotalUsersCount(totalCount: number): void;\r\n    isFetching: boolean;\r\n    toggleIsFetching(isFetching: boolean): void;\r\n    toggleFollowingInProgress(isFollowingInProgress: boolean): void;\r\n    followingInProgress: Array<number>;\r\n    getUsers(currentPage: number, pageSize: number, friend: boolean): void;\r\n}\r\n\r\nclass UsersApiContainer extends React.Component<UsersApiCProps> {\r\n    componentDidMount(): void {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize, this.props.friend);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize, this.props.friend);\r\n    }\r\n\r\n    render() {\r\n        return <div className={classes.content}>\r\n            {this.props.isFetching && <Preloader /> }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                users={this.props.users}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                portionSize={this.props.portionSize}\r\n                onPageChanged={this.onPageChanged}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n                getUsers={this.props.getUsers}\r\n                friend={this.props.friend}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        users: getUsersData(state),\r\n        pageSize: getPageSize(state),\r\n        portionSize: getPortionSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        friend: getIsFriend(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nconst UsersContainer = /*withAuthRedirect(*/connect(mapStateToProps, \r\n    {\r\n        follow,\r\n        unfollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        toggleIsFetching,\r\n        toggleFollowingInProgress,\r\n        getUsers\r\n    }\r\n    )(UsersApiContainer)/*)*/;\r\n\r\nexport default UsersContainer;"],"names":["props","pagesCount","Math","ceil","totalItemsCount","pageSize","portionSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftBorder","rightBorder","className","classes","onClick","filter","p","map","currentPage","onPageChanged","user","to","id","src","photos","small","userPhoto","followed","disabled","followingInProgress","some","unfollow","follow","name","status","checkbox","setCheckbox","useEffect","getUsers","totalUsersCount","type","checked","onChange","e","target","htmlFor","users","u","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getUsersData","state","usersData","getPageSize","getIsFriend","friend","getPortionSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersApiContainer","pageNumber","this","toggleFollowingInProgress","React","connect","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching"],"sourceRoot":""}