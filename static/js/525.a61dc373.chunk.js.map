{"version":3,"file":"static/js/525.a61dc373.chunk.js","mappings":"oLACA,EAAyB,2B,SCgBzB,EARmB,SAACA,GAChB,OACI,gBAAKC,UAAWC,EAAhB,UACI,SAAC,KAAD,CAASC,GAAI,aAAeH,EAAMI,GAAlC,SAAuCJ,EAAMK,QAGxD,ECdD,EAA0B,yBCA1B,EAA0B,yBCgB1B,EARgB,SAACL,GACb,OACI,gBAAKC,UAAWC,EAAhB,SACKF,EAAMM,SAGlB,E,UCoCKC,EAAiB,SAACP,GACpB,OACI,SAAC,KAAD,CACIQ,cAAe,CAAEC,eAAgB,IACjCC,SAAU,SAACC,EAAQC,GACfZ,EAAMU,SAASC,GACfC,EAAYC,WACf,EALL,SAOK,kBACG,UAAC,KAAD,YACI,0BACI,SAAC,KAAD,CAAOC,KAAM,OAAQT,KAAM,iBAAkBU,YAAa,wIAE9D,SAAC,KAAD,CAAcV,KAAK,QAAQW,UAAU,SACrC,mBAAQF,KAAM,SAAd,sEANP,GAWZ,EAED,EAhDgB,SAACd,GACb,IAAIiB,EAAiBjB,EAAMkB,YAAYC,QAClCC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAYhB,KAAMgB,EAAOhB,KAAMD,GAAIiB,EAAOjB,IAA9C,IAGXkB,EAActB,EAAMkB,YAAYK,SAC/BH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASlB,QAASkB,EAAElB,QAASF,GAAIoB,EAAEpB,IAAvC,IAOV,OACI,iBAAKH,UAAWC,EAAhB,WACI,yBACKe,KAEL,2BACKK,GACD,SAACf,EAAD,CAAgBG,SAXN,SAACC,GACnBX,EAAMyB,cAAcd,EAAOF,eAC9B,SAaJ,E,UCzBGiB,GAAwBC,E,QAAAA,GAAiBC,GAK7C,GAJyBC,EAAAA,EAAAA,KAhBD,SAACC,GACrB,MAAO,CACHZ,YAAaY,EAAMC,YAE1B,IAE0B,SAACC,GACxB,MAAO,CACHP,cAAe,SAAChB,GACZuB,GAASC,EAAAA,EAAAA,GAAmBxB,GAC/B,EAER,GAIwBoB,CAA8CH,E","sources":["webpack://my-app/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.tsx","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__yN9dV\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './DialogItem.module.css';\r\n\r\ninterface DialogItemProps {\r\n    name: string;\r\n    id: number;\r\n}\r\n\r\nconst DialogItem = (props: DialogItemProps) => {\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <NavLink to={'/Messages/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__lurZg\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__A5CdP\"};","import React from 'react';\r\nimport classes from './Message.module.css';\r\n\r\n\r\ninterface MessageProps {\r\n    message: string;\r\n    id: number;\r\n}\r\n\r\nconst Message = (props: MessageProps) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { BrowserRouter, NavLink, Navigate, Route, Routes } from 'react-router-dom';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Profile from '../Profile/Profile';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport classes from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\n\r\ninterface ElementsProps {\r\n    DialogsData: {\r\n        dialogs: Array<{\r\n            name: string;\r\n            id: number;\r\n        }>;\r\n        messages: Array<{\r\n            message: string;\r\n            id: number;\r\n        }>;\r\n        newMessageText: string;\r\n    };\r\n    onSendMessage(text: any): void;\r\n    isAuth?: boolean;\r\n}\r\n\r\nconst Dialogs = (props: ElementsProps) => {\r\n    let DialogElements = props.DialogsData.dialogs\r\n        .map(dialog => <DialogItem name={dialog.name} id={dialog.id} />)\r\n\r\n\r\n    let MessageData = props.DialogsData.messages\r\n        .map(m => <Message message={m.message} id={m.id} />)\r\n\r\n\r\n    const addNewMessage = (values: any) => {\r\n        props.onSendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div>\r\n                {DialogElements}\r\n            </div>\r\n            <div>\r\n                {MessageData}\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props: any) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ newMessageBody: \"\" }}\r\n            onSubmit={(values, submitProps) => {\r\n                props.onSubmit(values);\r\n                submitProps.resetForm();\r\n            }}\r\n        >\r\n            {() => (\r\n                <Form>\r\n                    <div>\r\n                        <Field type={'text'} name={'newMessageBody'} placeholder={'Введите текст сообщения'} />\r\n                    </div>\r\n                    <ErrorMessage name=\"email\" component=\"div\" />\r\n                    <button type={'submit'}>Отправить</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { BrowserRouter, NavLink, Navigate, Route, Routes } from 'react-router-dom';\r\nimport { StateFromReducersMapObject, compose } from 'redux';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\r\n\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        DialogsData: state.dialogsData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        onSendMessage: (newMessageBody: string) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (AuthRedirectComponent);\r\n\r\n/*const DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (Dialogs);*/\r\n\r\nexport default DialogsContainer;\r\n\r\n/*\r\nexport default compose<any, any, ElementsProps>(connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n    Dialogs\r\n);*/"],"names":["props","className","classes","to","id","name","message","AddMessageForm","initialValues","newMessageBody","onSubmit","values","submitProps","resetForm","type","placeholder","component","DialogElements","DialogsData","dialogs","map","dialog","MessageData","messages","m","onSendMessage","AuthRedirectComponent","withAuthRedirect","Dialogs","connect","state","dialogsData","dispatch","sendMessageCreator"],"sourceRoot":""}